apiVersion: apps/v1
kind: Deployment
metadata:
  name: site-monitor
  labels:
    app: site-monitor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: site-monitor
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: site-monitor
    spec:
      containers:
        - name: site-monitor
          image: ${DOCKER_USERNAME}/site-monitor-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: "production"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: site-monitor-secrets
                  key: secret-key
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: site-monitor
spec:
  selector:
    app: site-monitor
  ports:
    - port: 80
      targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: site-monitor-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - site-monitor.example.com
      secretName: site-monitor-tls
  rules:
    - host: site-monitor.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: site-monitor
                port:
                  number: 80
